parameters:
  
  - name: commitToGit
    type: boolean 
    default: false
  
  - name: branchToDeploy
    type: string 
    default: develop
  
  - name: stageToDeploy
    type: string 
    default: review
  
  - name: version
    type: string 
    default: auto
  
  - name: environmentToDeploy
    type: string 
    default: development

  - name: organization
    type: string 
    default: ''

  - name: bump
    type: string 
    default: 'patch'  


  - name: buildNumber
    type: string 
    default: ''
  
  - name: toBuild
    type: boolean 
    default: false

steps:
          - checkout: self


          - task: Cache@2
            displayName: Cache NPM Modules
            inputs:
              key: 'npm | "$(Agent.OS)"  | package-lock.json'
              path: '$(System.DefaultWorkingDirectory)/node_modules'
              cacheHitVar: 'npm | "$(Agent.OS)"'            


          - script: 'npx lerna bootstrap'
            displayName: 'Bootstrap Lerna'

         

          - script: 'npx lerna run build'
            displayName: 'Build  All  Packages'
   
 
         
        
          #  - task: DownloadSecureFile@1
          #    displayName: "Download App Tracker Configuration File"
          #    name: config
          #    inputs:
          #     secureFile: 'config.json'
        
        
          #  - task: CmdLine@2
          #    displayName: "Copy App Tracker Configuration File to Build Directory"
          #    inputs:
          #     script: 'cp -f $(config.secureFilePath)  $(System.DefaultWorkingDirectory)/packages/azpipelines/build/BuildTasks/Common/config.json'

          - task: CmdLine@2
            displayName: 'Set Release Mode to ${{ parameters.stageToDeploy }}'
            inputs:
               script: |
                npm run increment:azpipelines:version -- --version=${{ parameters.version }}  --stage=${{ parameters.stageToDeploy }} --buildNumber=${{ parameters.buildNumber }}
               workingDirectory: '$(System.DefaultWorkingDirectory)/packages/azpipelines'
          
          - task: CmdLine@2
            displayName: 'Create package'
            inputs:
              script: 'npm run package:azpipelines'
              workingDirectory: '$(System.DefaultWorkingDirectory)/packages/azpipelines'
        
          - task: CmdLine@2
            displayName: 'Publish the package for ${{ parameters.stageToDeploy }}'
            inputs:
              script: |
               npm run publish:azpipelines --  --version=$(Build.BuildNumber) --token=$(publish_token) --stage=${{ parameters.stageToDeploy }} --organization=${{ parameters.organization }}
              workingDirectory: '$(System.DefaultWorkingDirectory)/packages/azpipelines'
 

          - task: PublishBuildArtifacts@1
            displayName: Publish Extension Artifiact
            condition: always()
            inputs:
               pathtoPublish: '$(System.DefaultWorkingDirectory)/packages/azpipelines/dist' 
               artifactName: 'vsix' 
               publishLocation: 'Container' 
