name: Milestone14$(Rev:.r)

resources:
  repositories:
  - repository: forcedi # The name used to reference this repository in the checkout step
    type: git
    name: force-di

pr:
  branches:
    include:
    - develop
    - master
    - release/*
  paths:
    include:
      - '*' 
    exclude:
      - 'docs/*' 

trigger:
  branches:
    include:
     - feature/*
     - chore/*
     - hoftix/*
     - bugfix/*
     - release/*
     - develop
  paths:
    exclude:
    - 'docs/*' 


variables:
 - group: Tokens
 - name: major
   value: 13
   
 - name: minor
   value: $[counter(variables['major'], 1)] 
 


stages:

#Pull Request Review : Triggered for any PRs               
- stage: Review
  condition:  eq(variables['build.Reason'], 'PullRequest')
  dependsOn: []
  jobs:

  - template: build_templates/deciderjob.yml  

  - job: BuildCLI
    displayName: 'Build To Validate CLI'
    dependsOn: InstallNodeModules
    condition: and( succeeded('InstallNodeModules'), eq(dependencies.InstallNodeModules.outputs['Builddeciderstep.isCLIUpdated'], true) )
    timeoutInMinutes: 10
    pool:
      vmImage: 'windows-latest'
    steps:
      - template: build_templates/buildcli.yml  
        parameters:
         commitToGit: false
         bump: 'prerelease'
         publish: false   

  - deployment: BuildAzPipelines
    displayName: 'Build and Deploy Azure Pipelines Extension to Review'
    dependsOn: InstallNodeModules
    condition: and(succeeded('InstallNodeModules'), or( eq( dependencies.InstallNodeModules.outputs['Builddeciderstep.isAzurePipelinesUpdated'], true ),  eq( dependencies.InstallNodeModules.outputs['Builddeciderstep.isCoreUpdated'], true )  ))
    variables:
      isCoreUpdated: $[ dependencies.InstallNodeModules.outputs['Builddeciderstep.isCoreUpdated'] ]
    timeoutInMinutes: 40
    pool:
      vmImage: 'windows-latest'
    environment: review
    strategy:
       runOnce:
         deploy:
           steps:

             - template: build_templates/buildazpipelines.yml  
               parameters:
                commitToGit: false
                stageToDeploy: 'review'
                version: 'review'
                environmentToDeploy: 'review'
                toBuild: true
                organization: dxatscale
                buildNumber: $(minor)
  
  - job: WaitPluginToInstallonReview
    displayName: 'Wait for  Plugin To Install on Review'
    dependsOn: BuildAzPipelines
    pool: server
    steps:
      - task: Delay@1
        inputs:
         delayForMinutes: '2' 

  - template: build_templates/prtest.yml   
    parameters:
      name: 'TestPrOnLinux'
      image: 'ubuntu-latest'
      dependOnJob: 'WaitPluginToInstallonReview'
      repositoryToCheckout: 'forcedi'
      directory: 'force-di'
      service_connection: $(devhub_service_connection)
  
  - template: build_templates/prtest.yml   
    parameters:
      name: 'TestPrOnWindows'
      image: 'windows-latest'
      dependOnJob: 'WaitPluginToInstallonReview'
      repositoryToCheckout: 'forcedi'
      directory: 'force-di'
      service_connection: $(devhub_service_connection)

#Merge to Develop, Deploy Alpha builds      
- stage: Alpha
  condition: eq(variables['build.sourceBranch'], 'refs/heads/develop')
  dependsOn: []
  jobs:

  - template: build_templates/deciderjob.yml  

  - job: BuildCLI
    dependsOn: InstallNodeModules
    displayName: sfdx-plugin
    condition:  and( succeeded('InstallNodeModules'), eq(dependencies.InstallNodeModules.outputs['Builddeciderstep.isCLIUpdated'], true) )
    pool:
      vmImage: 'windows-latest'
    steps:
             - template: build_templates/buildcli.yml  
               parameters:
                commitToGit: true
                bump: 'prerelease' 
                version: 'alpha'   
                publish: true
                     

  - deployment: BuildAzPipelines
    displayName: azpipelines
    dependsOn: InstallNodeModules
    condition: and(succeeded('InstallNodeModules'), eq( dependencies.InstallNodeModules.outputs['Builddeciderstep.isAzurePipelinesUpdated'], true ))
    timeoutInMinutes: 20
    pool:
      vmImage: 'windows-latest'
    environment: alpha
    strategy:
       runOnce:
         deploy:
           steps:
    
             - template: build_templates/buildazpipelines.yml  
               parameters:
                commitToGit: true
                bump: 'prerelease' 
                stageToDeploy: 'alpha'
                version: 'alpha'
                environmentToDeploy: 'alpha'
                toBuild: true
                organization: dxatscalereview
                buildNumber: $(minor)
    
              
#Beta Stage
- stage: Beta
  condition: and(succeeded('Alpha'),eq(variables['build.sourceBranch'], 'refs/heads/develop'))
  dependsOn: Alpha
  jobs:

  - template: build_templates/deciderjob.yml  

  - job: BuildCLI
    displayName: sfdx-plugin
    dependsOn: InstallNodeModules
    condition:  and( succeeded('InstallNodeModules'), eq(dependencies.InstallNodeModules.outputs['Builddeciderstep.isCLIUpdated'], true) )
    pool:
      vmImage: 'windows-latest'
    steps:
             - template: build_templates/buildcli.yml  
               parameters:
                commitToGit: false
                bump: 'prerelease'
                version: 'beta'  
                publish: true
                     

  - deployment: BuildAzPipelines
    displayName: azpipelines
    dependsOn: InstallNodeModules
    condition: and(succeeded('InstallNodeModules'), eq( dependencies.InstallNodeModules.outputs['Builddeciderstep.isAzurePipelinesUpdated'], true ))
    timeoutInMinutes: 20
    pool:
      vmImage: 'windows-latest'
    environment: beta
    strategy:
       runOnce:
         deploy:
           steps:
    
             - template: build_templates/buildazpipelines.yml  
               parameters:
                commitToGit: false
                bump: 'prerelease'
                stageToDeploy: 'beta'
                version: 'beta'
                environmentToDeploy: 'beta'
                toBuild: true
                organization: dxatscalereview
                buildNumber: $(minor)

#Prod Stage
- stage: Prod
  condition: and(succeeded('Beta'),eq(variables['build.sourceBranch'], 'refs/heads/develop'))
  dependsOn: Beta
  jobs:

  - template: build_templates/deciderjob.yml  

  - job: BuildCLI
    displayName: sfdx-plugin
    dependsOn: InstallNodeModules
    condition:  and( succeeded('InstallNodeModules'), eq(dependencies.InstallNodeModules.outputs['Builddeciderstep.isCLIUpdated'], true) )
    pool:
      vmImage: 'windows-latest'
    steps:
             - template: build_templates/buildcli.yml  
               parameters:
                commitToGit: false
                bump: 'patch'
                version: 'prod'  
                publish: true
                     

  - deployment: BuildAzPipelines
    displayName: azpipelines
    dependsOn: BuildCLI
    condition: and(succeeded('InstallNodeModules'), eq( dependencies.InstallNodeModules.outputs['Builddeciderstep.isAzurePipelinesUpdated'], true ))
    timeoutInMinutes: 30
    pool:
      vmImage: 'windows-latest'
    environment: prod
    strategy:
       runOnce:
         deploy:
           steps:
    
             - template: build_templates/buildazpipelines.yml  
               parameters:
                commitToGit: false
                bump: 'patch'
                stageToDeploy: 'prod'
                version: 'prod'
                environmentToDeploy: 'prod'
                toBuild: true
                organization: dxatscalereview
                buildNumber: $(minor)
